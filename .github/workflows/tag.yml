name: Tag

on:
  push:
    branches:
      - master

jobs:
  publish:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # Git Setup
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Import GPG
        uses: crazy-max/ghaction-import-gpg@v6.0.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Setup git user
        run: |
          git config --global user.name "Brewen.DEV / CI"
          git config --global user.email "deploy@brewen.dev"

      # Environment Setup
      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Add node_modules/.bin to PATH
        run: echo "$(pwd)/node_modules/.bin" >> $GITHUB_PATH

      # Release
      - name: Determine if release is needed
        id: release_needed
        run: echo "needed=$(. ./scripts/release_needed.sh)" >> $GITHUB_OUTPUT

      - name: Release tag
        if: steps.release_needed.outputs.needed == 'true'
        run: bun run release -- --sign --no-verify

      - name: Set env vars
        id: release
        run: |
          echo "changed=$(git log origin/master..master --oneline | wc -l)" >> $GITHUB_OUTPUT
          echo "PKG_VERSION=v$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Push
        if: steps.release.outputs.changed != '0'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true

      - name: Build
        if: steps.release.outputs.changed != '0'
        run: bun run build

      - name: Pack artifact
        if: steps.release.outputs.changed != '0'
        run: cd dist && tar -czvf ../style-${{ env.PKG_VERSION }}.tar.gz * && cd ..

      - name: Generate release changelog
        if: steps.release.outputs.changed != '0'
        run: . ./scripts/release_changelog.sh

      - name: Create release
        if: steps.release.outputs.changed != '0'
        uses: ncipollo/release-action@v1.13.0
        with:
          artifacts: "style-${{ env.PKG_VERSION }}.tar.gz"
          token: ${{ secrets.CI_TOKEN }}
          name: ${{ env.PKG_VERSION }}
          tag: ${{ env.PKG_VERSION }}
          bodyFile: "RELEASE.md"
